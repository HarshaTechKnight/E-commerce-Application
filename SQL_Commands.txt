-- Create the 'cart_items' table
CREATE TABLE cart_items (
    cart_item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    cart_id BIGINT,
    product_id BIGINT,
    quantity INT,
    discount DOUBLE,
    product_price DOUBLE,
    FOREIGN KEY (cart_id) REFERENCES carts(cart_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Create the 'products' table
CREATE TABLE products (
    product_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_name VARCHAR(255) NOT NULL,
    image VARCHAR(255),
    description TEXT NOT NULL,
    quantity INT,
    price DOUBLE,
    discount DOUBLE,
    special_price DOUBLE,
    category_id BIGINT,
    FOREIGN KEY (category_id) REFERENCES categories(category_id)
);

-- Note: The 'category_id' column in 'products' references the 'category_id' column in 'categories'.

-- Create the 'categories' table
CREATE TABLE categories (
    category_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    category_name VARCHAR(255) NOT NULL
);

-- Note: The 'category_id' column is the primary key for the 'categories' table.


-- Create the 'order_items' table
CREATE TABLE order_items (
    order_item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    product_id BIGINT,
    order_id BIGINT,
    quantity INT,
    discount DOUBLE,
    ordered_product_price DOUBLE,
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (order_id) REFERENCES orders(order_id)
);

-- Note: The 'product_id' and 'order_id' columns reference the 'products' and 'orders' tables, respectively.

-- Create the 'orders' table
CREATE TABLE orders (
    order_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    order_date DATE,
    payment_id BIGINT,
    total_amount DOUBLE,
    order_status VARCHAR(255),
    FOREIGN KEY (payment_id) REFERENCES payments(payment_id)
);

-- Note: The 'payment_id' column references the 'payments' table.

-- Create the 'payments' table
CREATE TABLE payments (
    payment_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    payment_method VARCHAR(255) NOT NULL
);

-- Note: The 'payment_method' column requires a minimum of 4 characters.


-- Create the 'roles' table
CREATE TABLE roles (
    role_id BIGINT PRIMARY KEY,
    role_name VARCHAR(255)
);

-- Create the 'users' table
CREATE TABLE users (
    user_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(30) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    mobile_number VARCHAR(10) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255)
);

-- Create the 'user_role' join table
CREATE TABLE user_role (
    user_id BIGINT,
    role_id BIGINT,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (role_id) REFERENCES roles(role_id)
);

-- Create the 'user_address' join table
CREATE TABLE user_address (
    user_id BIGINT,
    address_id BIGINT,
    PRIMARY KEY (user_id, address_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (address_id) REFERENCES addresses(address_id)
);

